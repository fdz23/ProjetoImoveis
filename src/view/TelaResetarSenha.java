/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.FuncionarioController;
import javax.swing.JOptionPane;
import util.Validacao;
import controller.PessoaController;
import controller.UsuarioController;
import model.Funcionario;
import model.Pessoa;
import model.Usuario;
import util.GeradorPasswords;
import util.apiEmail.SendEmail;

/**
 *
 * @author fdz
 */
public class TelaResetarSenha extends javax.swing.JFrame {

    /**
     * Creates new form TelaNovaSenha
     */
    public TelaResetarSenha() {
        initComponents();
        jTextFieldToken.setEnabled(false);
        jButtonToken.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldToken = new javax.swing.JTextField();
        jButtonResetar = new javax.swing.JButton();
        jButtonToken = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Digite seu e-mail");

        jLabel2.setText("Digite o token recebido");

        jTextFieldToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTokenActionPerformed(evt);
            }
        });

        jButtonResetar.setText("Resetar senha");
        jButtonResetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetarActionPerformed(evt);
            }
        });

        jButtonToken.setText("Prosseguir");
        jButtonToken.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTokenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldEmail)
                            .addComponent(jTextFieldToken, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jButtonResetar)))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonToken)
                .addGap(127, 127, 127))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonResetar)
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldToken, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonToken)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonResetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetarActionPerformed
        try {
            String email = jTextFieldEmail.getText();
            if (email.equals("")) {
                throw new Exception("Digite um e-mail no campo de e-mail.");
            }

            if (Validacao.validarEmail(email)) {

                Usuario user = new UsuarioController().getItemComLoginPorEmail(email);
                if (user != null) {

                    jTextFieldEmail.setEnabled(false);
                    jTextFieldToken.setEnabled(true);
                    jButtonResetar.setEnabled(false);
                    jButtonToken.setEnabled(true);

                    String token = GeradorPasswords.generateSecurePassword(email, "Verificacao");

                    new SendEmail().sendEmail(email, token);
                    user.setToken(token);
                    new UsuarioController().alterarItem(user);

                    JOptionPane.showMessageDialog(this, "Foi enviado um e-mail com um token para confirmação.");
                } else {
                    throw new Exception("E-mail não cadastrado no sistema.");
                }
            } else {
                throw new Exception("É necessário digitar um e-mail válido.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonResetarActionPerformed

    private void jTextFieldTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTokenActionPerformed
        
    }//GEN-LAST:event_jTextFieldTokenActionPerformed

    private void jButtonTokenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTokenActionPerformed
        try {
            String token = jTextFieldToken.getText();

            if (token.equals("")) {
                throw new Exception("Digite um token no campo de token.");
            }

            Usuario user = new UsuarioController().getItemByToken(token);
            if (user != null) {
                
                user.setToken("");
                String novaSenha = "";
                
                while(novaSenha.equals("")) {
                    novaSenha = JOptionPane.showInputDialog("Digite a nova senha");
                    if(novaSenha.equals(""))
                        JOptionPane.showMessageDialog(this, "Por favor digite algo no campo de senha");
                }
                
                user.setSenha(GeradorPasswords.generateSecurePassword(novaSenha, "Pacoca"));
                new UsuarioController().alterarItem(user);
                
                JOptionPane.showMessageDialog(this, "Senha alterada com sucesso");
                
                dispose();
            }
            else
                throw new Exception("Token incorreto.");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonTokenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaResetarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaResetarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaResetarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaResetarSenha.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaResetarSenha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonResetar;
    private javax.swing.JButton jButtonToken;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldToken;
    // End of variables declaration//GEN-END:variables
}
